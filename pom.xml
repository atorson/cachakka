<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.cachakka.streaming</groupId>
	<artifactId>cachakka-parent</artifactId>
	<version>0.5.0-SNAPSHOT</version>
	<name>Cachakka: Durable Akka Streaming Index</name>
	<packaging>pom</packaging>

	<properties>

        <!--override it in child POM-->
        <includeProtoFolder>${project.basedir}/../target/proto</includeProtoFolder>
        <protoSourceFile>cachakka.proto</protoSourceFile>

        <slf4j.version>1.7.25</slf4j.version>
        <logback.version>1.1.3</logback.version>
        <flink.version>1.6.3</flink.version>
        <dropwizard.version>3.1.4</dropwizard.version>
        <scala.major-version>2.11</scala.major-version>
        <scala.version>2.11.7</scala.version>
        <scalapb.version>0.6.7</scalapb.version>
        <scala-logging.version>3.7.2</scala-logging.version>
        <json4s.version>0.3.2</json4s.version>
        <akka.version>2.4.20</akka.version>
        <akka-http.version>10.0.10</akka-http.version>
        <akka-management.version>0.7</akka-management.version>
        <akka-swagger.version>0.11.1</akka-swagger.version>
        <akka-pers-cass.version>0.30</akka-pers-cass.version>
        <protobuf.version>3.5.0</protobuf.version>
        <grpc.version>1.9.0</grpc.version>
        <java.version>1.8</java.version>
        <vavr.version>0.9.2</vavr.version>
        <joda.version>2.8.2</joda.version>
        <guice.version>4.0</guice.version>
        <quill.version>2.5.4</quill.version>
        <config.version>1.3.0</config.version>
        <kafka.major-version>0.10</kafka.major-version>
        <kafka.version>0.10.2.1</kafka.version>
        <parquet.version>1.10.0</parquet.version>
        <jackson.version>2.8.10</jackson.version>
        <prometheus.version>0.3.0</prometheus.version>
        <dbcp.version>1.2.2</dbcp.version>
        <mysql-driver.version>5.1.17</mysql-driver.version>
        <guava.version>18.0</guava.version>
        <gson.version>2.8.0</gson.version>
        <jsonpath.version>2.2.0</jsonpath.version>
        <retrofit.version>1.9.0</retrofit.version>
        <okhttp.version>2.2.0</okhttp.version>
        <hystrix.version>1.3.20</hystrix.version>
        <datastax.version>3.1.0</datastax.version>
        <lombok.version>1.16.20</lombok.version>
        <lz4.version>1.3.0</lz4.version>
        <snappy.version>1.1.7.2</snappy.version>
       	<junit.version>4.11</junit.version>
        <scalatest.version>3.0.5</scalatest.version>
        <hamcrest.version>1.3</hamcrest.version>
        <spring-kafka.version>1.2.3.RELEASE</spring-kafka.version>
        <cassandra-unit.version>3.5.0.1</cassandra-unit.version>
        <mariaDB.version>2.2.3</mariaDB.version>
        <apache-poi.version>3.17</apache-poi.version>
        <spring-shell.version>2.0.1.RELEASE</spring-shell.version>
        <spring-boot.version>2.1.0.RELEASE</spring-boot.version>
        <springframework.boot.version>1.5.9.RELEASE</springframework.boot.version>
        <jsonschema2pojo.version>1.0.0</jsonschema2pojo.version>


        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>


    <modules>
        <module>core</module>
        <module>core-flink</module>
        <module>core-test</module>
        <module>components</module>
        <module>metrics</module>
        <module>akka</module>
        <module>akka-flink-deploy</module>
    </modules>

    <profiles>
        <profile>
            <id>proto</id>
            <activation>
                <file>
                    <exists>src/main/resources/proto/</exists>
                </file>
            </activation>

            <dependencies>
                <dependency>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </dependency>
                <dependency>
                    <groupId>com.trueaccord.scalapb</groupId>
                    <artifactId>scalapb-runtime_${scala.major-version}</artifactId>
                </dependency>
                <dependency>
                    <groupId>com.trueaccord.scalapb</groupId>
                    <artifactId>scalapb-json4s_${scala.major-version}</artifactId>
                </dependency>
                <dependency>
                    <groupId>com.trueaccord.scalapb</groupId>
                    <artifactId>scalapb-runtime-grpc_${scala.major-version}</artifactId>
                </dependency>
                <dependency>
                    <groupId>com.google.protobuf</groupId>
                    <artifactId>protobuf-java</artifactId>
                </dependency>
                <dependency>
                    <groupId>io.grpc</groupId>
                    <artifactId>grpc-netty-shaded</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.scalatest</groupId>
                    <artifactId>scalatest_${scala.major-version}</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <!--Generate Java version of the proto file(s)-->
                    <plugin>
                        <groupId>com.github.os72</groupId>
                        <artifactId>protoc-jar-maven-plugin</artifactId>
                        <version>3.5.1.1</version>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <addProtoSources>inputs</addProtoSources>
                                    <includeDirectories>
                                        <include>${includeProtoFolder}</include>
                                    </includeDirectories>
                                    <inputDirectories>
                                        <include>${project.basedir}/src/main/resources/proto</include>
                                    </inputDirectories>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Generate Scala version of the proto file(s) -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.5.0</version>
                        <executions>
                            <execution>
                                <id>generate-scala-protobuf-classes</id>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <mainClass>com.trueaccord.scalapb.ScalaPBC</mainClass>
                                    <cleanupDaemonThreads>false</cleanupDaemonThreads>
                                    <includePluginDependencies>true</includePluginDependencies>
                                    <classpathScope>compile</classpathScope>
                                    <executableDependency>
                                        <groupId>com.trueaccord.scalapb</groupId>
                                        <artifactId>scalapbc_${scala.major-version}</artifactId>
                                    </executableDependency>
                                    <arguments>
                                        <argument>-v300</argument> <!-- for protoc v3.0.0, can be 261 for v2.6.1 -->
                                        <argument>--throw</argument> <!-- Important: otherwise scalapbc will kill the VM -->
                                        <argument>--proto_path=${includeProtoFolder}</argument>
                                        <argument>--proto_path=${project.basedir}/src/main/resources/proto</argument>
                                        <argument>--scala_out=java_conversions,grpc:${project.build.directory}/generated-sources</argument>
                                        <argument>${protoSourceFile}</argument>
                                        <!--
                                        If you need to pass generator parameters to ScalaPB, then add more commad-delimited args to the scala_out line above,
                                        something like this: scala_out=single_line_to_string,java_conversions:${project.build.directory}/generated-sources/protobuf</argument>
                                        -->
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>com.trueaccord.scalapb</groupId>
                                <artifactId>scalapbc_${scala.major-version}</artifactId>
                                <version>${scalapb.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.scala-tools</groupId>
                        <artifactId>maven-scala-plugin</artifactId>
                        <version>2.15.2</version>
                        <executions>
                            <execution>
                                <id>compile</id>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <phase>compile</phase>
                            </execution>
                            <execution>
                                <id>test-compile</id>
                                <goals>
                                    <goal>testCompile</goal>
                                </goals>
                                <phase>test-compile</phase>
                            </execution>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <!--declare version-managed dependencies: these are not auto-imported to children-->
	<dependencyManagement>
		<dependencies>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-reflect</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.trueaccord.scalapb</groupId>
                <artifactId>scalapb-runtime_${scala.major-version}</artifactId>
                <version>${scalapb.version}</version>
            </dependency>
            <dependency>
                <groupId>com.trueaccord.scalapb</groupId>
                <artifactId>scalapb-runtime-grpc_${scala.major-version}</artifactId>
                <version>${scalapb.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty-shaded</artifactId>
                <version>${grpc.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-java</artifactId>
                <version>${flink.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>slf4j-log4j12</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>log4j</artifactId>
                        <groupId>log4j</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-metrics-core</artifactId>
                <version>${flink.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-metrics-dropwizard</artifactId>
                <version>${flink.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-java_${scala.major-version}</artifactId>
                <version>${flink.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>jackson-databind</artifactId>
                        <groupId>com.fasterxml.jackson.core</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-clients_${scala.major-version}</artifactId>
                <version>${flink.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-statebackend-rocksdb_${scala.major-version}</artifactId>
                <version>${flink.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-kafka-${kafka.major-version}_${scala.major-version}</artifactId>
                <version>${flink.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-cassandra_${scala.major-version}</artifactId>
                <version>${flink.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.cassandra</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-filesystem_${scala.major-version}</artifactId>
                <version>${flink.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-shaded-hadoop2</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-core</artifactId>
                <version>${dropwizard.version}</version>
            </dependency>

            <dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>cassandra-driver-mapping</artifactId>
                <version>${datastax.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.cassandra</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>cassandra-driver-core</artifactId>
                <version>${datastax.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.cassandra</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.typesafe.scala-logging</groupId>
                <artifactId>scala-logging_${scala.major-version}</artifactId>
                <version>${scala-logging.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>io.vavr</groupId>
                <artifactId>vavr</artifactId>
                <version>${vavr.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <dependency>
                <groupId>io.getquill</groupId>
                <artifactId>quill-cassandra_${scala.major-version}</artifactId>
                <version>${quill.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.cassandra</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.datastax.cassandra</groupId>
                        <artifactId>cassandra-driver-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.trueaccord.scalapb</groupId>
                <artifactId>scalapb-json4s_${scala.major-version}</artifactId>
                <version>${json4s.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-dbcp</groupId>
                <artifactId>commons-dbcp</artifactId>
                <version>${dbcp.version}</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-driver.version}</version>
            </dependency>

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${guice.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.parquet</groupId>
                <artifactId>parquet-protobuf</artifactId>
                <version>${parquet.version}</version>
            </dependency>

            <!-- Akka -->
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-actor_${scala.major-version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-stream_${scala.major-version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-remote_${scala.major-version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-cluster_${scala.major-version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-cluster-sharding_${scala.major-version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-cluster-tools_${scala.major-version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-persistence_${scala.major-version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-distributed-data-experimental_${scala.major-version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-persistence-cassandra_${scala.major-version}</artifactId>
                <version>${akka-pers-cass.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-http_${scala.major-version}</artifactId>
                <version>${akka-http.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-http-spray-json_${scala.major-version}</artifactId>
                <version>${akka-http.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-slf4j_${scala.major-version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.lightbend.akka.management</groupId>
                <artifactId>akka-management-cluster-http_${scala.major-version}</artifactId>
                <version>${akka-management.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>akka-http_${scala.major-version}</artifactId>
                        <groupId>com.typesafe.akka</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>akka-http-core_${scala.major-version}</artifactId>
                        <groupId>com.typesafe.akka</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>akka-http-spray-json_${scala.major-version}</artifactId>
                        <groupId>com.typesafe.akka</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>akka-stream_${scala.major-version}</artifactId>
                        <groupId>com.typesafe.akka</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>akka-actor_${scala.major-version}</artifactId>
                        <groupId>com.typesafe.akka</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>akka-cluster_${scala.major-version}</artifactId>
                        <groupId>com.typesafe.akka</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>akka-cluster-sharding_${scala.major-version}</artifactId>
                        <groupId>com.typesafe.akka</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.github.swagger-akka-http</groupId>
                <artifactId>swagger-akka-http_${scala.major-version}</artifactId>
                <version>${akka-swagger.version}</version>
            </dependency>

            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient</artifactId>
                <version>${prometheus.version}</version>
            </dependency>

            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_pushgateway</artifactId>
                <version>${prometheus.version}</version>
            </dependency>

            <dependency>
                <groupId>com.squareup.retrofit</groupId>
                <artifactId>retrofit</artifactId>
                <version>${retrofit.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.code.gson</groupId>
                        <artifactId>gson</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp</groupId>
                <artifactId>okhttp-urlconnection</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.netflix.hystrix</groupId>
                <artifactId>hystrix-core</artifactId>
                <version>${hystrix.version}</version>
                <exclusions>
                  <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.typesafe</groupId>
                <artifactId>config</artifactId>
                <version>${config.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${jsonpath.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>

            <dependency>
                <groupId>net.jpountz.lz4</groupId>
                <artifactId>lz4</artifactId>
                <version>${lz4.version}</version>
            </dependency>

            <dependency>
                <groupId>org.xerial.snappy</groupId>
                <artifactId>snappy-java</artifactId>
                <version>${snappy.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-runtime-web_${scala.major-version}</artifactId>
                <version>${flink.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>


            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_${scala.major-version}</artifactId>
                <version>${scalatest.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-all</artifactId>
                <version>${hamcrest.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka-test</artifactId>
                <version>${spring-kafka.version}</version>
               <exclusions>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>

            </dependency>
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${spring-kafka.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>

            </dependency>

            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-testkit_${scala.major-version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-multi-node-testkit_${scala.major-version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.cassandraunit</groupId>
                <artifactId>cassandra-unit</artifactId>
                <version>${cassandra-unit.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.vorburger.mariaDB4j</groupId>
                <artifactId>mariaDB4j</artifactId>
                <version>${mariaDB.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${apache-poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.shell</groupId>
                <artifactId>spring-shell-starter</artifactId>
                <version>${spring-shell.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${springframework.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
        </dependencies>
	</dependencyManagement>

    <!--declare auto-imported dependencies: these are pushed to all children (and probably should be empty here)-->
    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
        </dependency>
        <dependency>
            <groupId>com.typesafe.scala-logging</groupId>
            <artifactId>scala-logging_${scala.major-version}</artifactId>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.major-version}</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <artifactId>slf4j-api</artifactId>
            <groupId>org.slf4j</groupId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.3.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>3.0.1</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jsonschema2pojo</groupId>
            <artifactId>jsonschema2pojo-maven-plugin</artifactId>
            <version>${jsonschema2pojo.version}</version>
        </dependency>

    </dependencies>

	<build>
        <!--common plugins are declared here: they will propagate to all children (unless inheritance flag is explicitly set to false)-->
		<plugins>
            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <version>2.15.2</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <phase>test-compile</phase>
                    </execution>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.lewisd</groupId>
                <artifactId>lint-maven-plugin</artifactId>
                <version>0.0.8</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.20.1</version>
                <configuration>
                    <systemPropertyVariables>
                        <targetEnvironment>test</targetEnvironment>
                        <!-- For CentOS machines -->
                        <aeron.rcv.initial.window.length>124928</aeron.rcv.initial.window.length>
                    </systemPropertyVariables>
                    <argLine>-Xms2000m</argLine>
                    <argLine>-Xmx4000m</argLine>
                </configuration>
            </plugin>

            <!--Extract and add external/3rd party Proto dependencies-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <id>copy-standard-protobuf-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.google.protobuf</groupId>
                                    <artifactId>protobuf-java</artifactId>
                                    <version>${protobuf.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.basedir}/target/proto</outputDirectory>
                                    <includes>**/*.proto</includes>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.trueaccord.scalapb</groupId>
                                    <artifactId>scalapb-runtime_${scala.major-version}</artifactId>
                                    <version>${scalapb.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.basedir}/target/proto</outputDirectory>
                                    <includes>**/*.proto</includes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

		</plugins>
	</build>
</project>

